# reusable workflow that parses files from artifact directory, renders them
# through a template, and publishes render to PR or step summary.

name: Feedback Reusable Workflow
on:
  workflow_call:
    inputs:
      artifact-name:
        description: 'Artifact to parse'
        default: 'feedback'
        required: true
        type: string
      pr-template:
        description: 'Template to use for PR comments'
        required: false
        type: string
      pr-title:
        description: 'Title of the PR to post feedback to'
        default: 'Feedback'
        required: false
        type: string
      pr-base:
        description: 'Base branch of the PR to post feedback to'
        default: 'feedback'
        required: false
        type: string
      pr-branch:
        description: 'Branch of the PR to post feedback to'
        default: ${{ github.event.repository.default_branch }}
        required: false
        type: string
      summary-template:
        description: 'Template to use for step summary'
        required: false
        type: string
    secrets:
      token:
        description: 'Token to use for PR comments'
        required: true

permissions:
  contents: read
  pull-requests: write

env:
  FEEDBACK_DIR: feedback

jobs:
  parse-feedback:
    name: Parse Feedback
    runs-on: ubuntu-latest
    steps:
      # download artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ env.FEEDBACK_DIR }}

      - run: ls -la ${{ env.FEEDBACK_DIR }}

      # parse feedback
      # output name - output
      # TODO: replace with action that parses more file types
      - name: parse feedback
        uses: yzalvin/action-yaml-front-matter@v1
        id: parse-files
        with:
          input-directory: ${{ env.FEEDBACK_DIR }}

      - name: Check jq installation
        run: |
          jq --version
          which jq
      
      - name: Add JSON to a key in a new JSON array
        id: add-key
        run: |
          json_output='${{ steps.parse-files.outputs.output }}'
          new_json=$(echo "$json_output" | jq -c '. | {"feedback-files": .}')
          echo "New JSON: $new_json"
          {
            echo 'output<<EOF'
            echo "$new_json"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"
        shell: bash

      - run: echo "${{ steps.add-key.outputs.output }}"

    outputs:
      feedback-json: ${{ steps.add-key.outputs.output }}

  post-pr:
    name: Post PR comment
    runs-on: ubuntu-latest
    needs: parse-feedback
    if: ${{ inputs.pr-template }}
    steps:
      # checkout repo to access template files
      - name: Checkout
        uses: actions/checkout@v4

      # - if: ${{ !inputs.pr-template }}
      #   run: echo "no PR template proved, skipping PR feedback"

      # find PR if it exists
      - name: Find PR number
        # if: ${{ inputs.pr-template }}
        uses: markpatterson27/find-pull-request-action@pre-pr-release-v1.8.0  # TODO: update to latest version
        id: find-pr
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          title: ${{ inputs.pr-title }}
          base: ${{ inputs.pr-base }}
          branch: ${{ inputs.pr-branch }}
          state: all

      # if PR not found, exit
      - if: ${{ steps.find-pr.outputs.number == 0 }}
        run: echo "no PR found, skipping PR feedback"

      # if PR exists, render template
      - if: ${{ steps.find-pr.outputs.number != 0 }}
        name: Render Template
        id: render
        uses: ntsd/liquidjs-action@main # TODO: fork and update
        with:
          variables: ${{ needs.parse-feedback.outputs.feedback-json }}
          template-file: ${{ inputs.pr-template }}

      # if PR exists, hide previous comment
      - if: ${{ steps.find-pr.outputs.number != 0 }}
        name: hide old feedback comments
        uses: kanga333/comment-hider@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_number: ${{ steps.find-pr.outputs.number }}

      # if PR exists, post new comment
      # post comment on feedback PR. issues and PRs have same numbers
      - if: ${{ steps.find-pr.outputs.number != 0 }}
        name: post comment
        uses: actions/github-script@v7
        env:
          MESSAGE: ${{ steps.render.outputs.result }}
          ISSUE: ${{ steps.find-pr.outputs.number }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { MESSAGE, ISSUE } = process.env
            await github.rest.issues.createComment({
              issue_number: process.env.ISSUE,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${MESSAGE}`
            })

  post-stepsummary:
    name: Post step-summary
    runs-on: ubuntu-latest
    needs: parse-feedback
    if: ${{ inputs.summary-template }}
    steps:
      # checkout repo to access template files
      - name: Checkout
        uses: actions/checkout@v4
